#!/usr/bin/env bash

createdb globardb

psql globardb -a  <<__END
create user globar_role password 'j3mc';
__END

psql -Uglobar_role globardb -a <<__END
drop table if exists vendor_rating;
drop table if exists Customers;
drop table if exists Vendors;
drop table if exists Services;
CREATE OR REPLACE FUNCTION maintain_updated_at()
RETURNS TRIGGER AS \$\$
BEGIN
   NEW.updated_at = now();
   RETURN NEW;
END;
\$\$ language 'plpgsql';

create table Customers (
  cust_id int generated by default as identity primary key,
  name_first text,
  name_last text,
  password text,
  email text not null,
  addr_str_num text,
  addr_str_name text,
  addr_city text,
  addr_state text,
  addr_postal text,
  phone text,
  locale text,
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp);
create trigger cust_updated_at before update
on Customers for each row execute procedure
maintain_updated_at();

/* this index ensures that email addresses are unique in the system */
create unique index idx_cust_email on Customers(email);

create table Vendors (
  vendor_id int generated by default as identity primary key,
  name_first text,
  name_last text,
  password text,
  email text,
  addr_str_num text,
  addr_str_name text,
  addr_city text,
  addr_state text,
  addr_postal text,
  phone text,
  locale text,
  summary text,
  radius int,
  profile_pic text,
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp);
create trigger vendor_updated_at before update
on Vendors for each row execute procedure
maintain_updated_at();

create index ven_up_name on Vendors (UPPER(name_last));

/* this index ensures that all vendor email addresses are unique in the system */
create unique index idx_ven_email on Vendors(email);

create table Services (
  vendor_id int,
  s_name text,
  s_description text,
  s_type text,
  s_price int,
  s_duration int
);
create trigger service_updated_at before update
on Services for each row execute procedure
maintain_updated_at();

create table vendor_rating (
  vendor_id int references Vendors(vendor_id),
  cust_id int references Customers(cust_id),
  rating integer not null,
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp);
create trigger vendor_rating_updated_at before update
on vendor_rating for each row execute procedure
maintain_updated_at();

/* this is required to support the upsert operation
   and constrains one review per Customer per vendor */
create unique index idx_vid_uid on vendor_rating (vendor_id, cust_id);

insert into Vendors (vendor_id, name_first, name_last, email, summary, addr_city, profile_pic) values
  (1234, 'Wishful', 'Wanda',   'wanda@gmail.com',  'We make sure your toes don''t look Dumb and Dumber', 'vancouver', 'wanda-profile.jpg'),
  (1235, 'Helen', 'Hairspray', 'helen@gmail.com',  'In business since yesterday, we make sure you don''t die from fumes', 'Vancouver', 'helen-profile.jpg'),
  (1236, 'Jackie', 'Jones',    'jackie@gmail.com', 'Your fast track to a smooth butt', 'Surrey', 'jackie-profile.jpg'),
  (1237, 'Tony', 'Toenails',   'tony@gmail.com',   'We make sure your face is tastefully decorated for all occaisions', 'Vancouver', 'tony-profile.jpg');
alter table Vendors alter column vendor_id restart with 1300;

insert into Customers (cust_id, name_first, name_last, password, email) values
  (37, 'mr. john', 'dough', 'password1', 'curious@gmail.com'),
  (1410, 'alex', 'attenborough', 'password2', 'bleeding@hotmail.com'),
  (2812, 'nancy', 'drew', 'password3', 'missyo@abc.com');
alter table Customers alter column cust_id restart with 2900;

insert into vendor_rating (vendor_id, cust_id, rating) values
  (1234, 37, 3),
  (1234, 1410, 5),
  (1236, 1410, 4),
  (1237, 1410, 4),
  (1237, 2812, 4),
  (1237, 37, 5);

insert into Services (vendor_id, s_name, s_description, s_type, s_price, s_duration) values
  (1234, 'french manicure', 'covers paint and laquer for 10 fingers', 'nails', 2000, 30),
  (1234, 'spanish manicure', 'involves hot sauce and salsa', 'nails', 3000, 45),
  (1235, 'nail trim and polish', 'your pick of 5 colors plus a clear coat', 'nails', 4000, 40),
  (1235, 'blow', 'refurbish your hair to salon style', 'hair', 3000, 30),
  (1235, 'trim', 'will give your hair a quick trim', 'hair', 8000, 60),
  (1235, 'color', 'will pick a color for your hair and give you the full stinky treatment', 'hair', 10000, 90),
  (1236, 'file and polish', 'will smooth and polish your fingernails', 'nails', 6000, 60),
  (1237, 'back massage', 'an intense 30 minute upper back massage', 'massage', 8000, 30),
  (1237, 'full massage', 'will massage your face, back and legs', 'massage', 12000, 60);
END
